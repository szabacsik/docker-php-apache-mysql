version: '3.8'
services:
  php560:
    build:
      context: ./php560
      dockerfile: Dockerfile
    container_name: php560
    hostname: php560
    ports:
      - 5600:80
    volumes:
      - /srv/www:/var/www/html
    networks:
      - backendNetwork
    depends_on:
      - db
    environment:
      MYSQL_HOST: db
      MYSQL_PORT: 3306
      MYSQL_USER: root
      MYSQL_PASSWORD: PASSWORD
  php7412:
    build:
      context: ./php7412
      dockerfile: Dockerfile
    container_name: php7412
    hostname: php7412
    ports:
      - 7412:80
    volumes:
      - /srv/www:/var/www/html
    networks:
      - backendNetwork
    depends_on:
      - db
    environment:
      MYSQL_HOST: db
      MYSQL_PORT: 3306
      MYSQL_USER: root
      MYSQL_PASSWORD: PASSWORD
  db:
    image: mysql/mysql-server:latest
    container_name: db
    hostname: db
    ports:
      - 127.0.0.1:3306:3306
    volumes:
      - /srv/infra/db:/var/lib/mysql
    networks:
      - backendNetwork
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: PASSWORD
      MYSQL_ROOT_HOST: "%"
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: phpmyadmin
    hostname: phpmyadmin
    ports:
      - 8080:80
    networks:
      - backendNetwork
    depends_on:
      - db
    environment:
      PMA_HOST: db
  redis:
    image: redis:latest
    container_name: redis
    ports:
      - 127.0.0.1:6379:6379
    networks:
      - backendNetwork
  mailcatcher:
    restart: always
    image: schickling/mailcatcher
    container_name: mailcatcher
    ports:
      - 1080:1080
      - 1025:1025
  portainer:
    image: portainer/portainer
    container_name: portainer
    command: -H unix:///var/run/docker.sock
    restart: always
    ports:
      - 9999:9000
      - 8000:8000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
volumes:
  portainer_data:      
networks:
  backendNetwork:
    name: backend_network
